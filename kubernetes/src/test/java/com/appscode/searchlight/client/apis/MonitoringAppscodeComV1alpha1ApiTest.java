/*
 * stash-server
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * Contact: hello@appscode.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.appscode.searchlight.client.apis;

import com.appscode.searchlight.client.ApiException;
import io.kubernetes.client.models.V1APIResourceList;
import io.kubernetes.client.models.V1DeleteOptions;
import io.kubernetes.client.models.V1Status;
import com.appscode.searchlight.client.models.V1alpha1ClusterAlert;
import com.appscode.searchlight.client.models.V1alpha1ClusterAlertList;
import com.appscode.searchlight.client.models.V1alpha1Incident;
import com.appscode.searchlight.client.models.V1alpha1IncidentList;
import com.appscode.searchlight.client.models.V1alpha1NodeAlert;
import com.appscode.searchlight.client.models.V1alpha1NodeAlertList;
import com.appscode.searchlight.client.models.V1alpha1PodAlert;
import com.appscode.searchlight.client.models.V1alpha1PodAlertList;
import com.appscode.searchlight.client.models.V1alpha1SearchlightPlugin;
import com.appscode.searchlight.client.models.V1alpha1SearchlightPluginList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MonitoringAppscodeComV1alpha1Api
 */
@Ignore
public class MonitoringAppscodeComV1alpha1ApiTest {

    private final MonitoringAppscodeComV1alpha1Api api = new MonitoringAppscodeComV1alpha1Api();

    
    /**
     * 
     *
     * create a ClusterAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNamespacedClusterAlertTest() throws ApiException {
        String namespace = null;
        V1alpha1ClusterAlert body = null;
        String pretty = null;
        V1alpha1ClusterAlert response = api.createNamespacedClusterAlert(namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create an Incident
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNamespacedIncidentTest() throws ApiException {
        String namespace = null;
        V1alpha1Incident body = null;
        String pretty = null;
        V1alpha1Incident response = api.createNamespacedIncident(namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a NodeAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNamespacedNodeAlertTest() throws ApiException {
        String namespace = null;
        V1alpha1NodeAlert body = null;
        String pretty = null;
        V1alpha1NodeAlert response = api.createNamespacedNodeAlert(namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a PodAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNamespacedPodAlertTest() throws ApiException {
        String namespace = null;
        V1alpha1PodAlert body = null;
        String pretty = null;
        V1alpha1PodAlert response = api.createNamespacedPodAlert(namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a SearchlightPlugin
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNamespacedSearchlightPluginTest() throws ApiException {
        String namespace = null;
        V1alpha1SearchlightPlugin body = null;
        String pretty = null;
        V1alpha1SearchlightPlugin response = api.createNamespacedSearchlightPlugin(namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of ClusterAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCollectionNamespacedClusterAlertTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1Status response = api.deleteCollectionNamespacedClusterAlert(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of Incident
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCollectionNamespacedIncidentTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1Status response = api.deleteCollectionNamespacedIncident(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of NodeAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCollectionNamespacedNodeAlertTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1Status response = api.deleteCollectionNamespacedNodeAlert(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of PodAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCollectionNamespacedPodAlertTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1Status response = api.deleteCollectionNamespacedPodAlert(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of SearchlightPlugin
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCollectionNamespacedSearchlightPluginTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1Status response = api.deleteCollectionNamespacedSearchlightPlugin(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a ClusterAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNamespacedClusterAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1DeleteOptions body = null;
        String pretty = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        V1Status response = api.deleteNamespacedClusterAlert(name, namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete an Incident
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNamespacedIncidentTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1DeleteOptions body = null;
        String pretty = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        V1Status response = api.deleteNamespacedIncident(name, namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a NodeAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNamespacedNodeAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1DeleteOptions body = null;
        String pretty = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        V1Status response = api.deleteNamespacedNodeAlert(name, namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a PodAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNamespacedPodAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1DeleteOptions body = null;
        String pretty = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        V1Status response = api.deleteNamespacedPodAlert(name, namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a SearchlightPlugin
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNamespacedSearchlightPluginTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1DeleteOptions body = null;
        String pretty = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        V1Status response = api.deleteNamespacedSearchlightPlugin(name, namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAPIResourcesTest() throws ApiException {
        V1APIResourceList response = api.getAPIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ClusterAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listClusterAlertForAllNamespacesTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1ClusterAlertList response = api.listClusterAlertForAllNamespaces(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Incident
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIncidentForAllNamespacesTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1IncidentList response = api.listIncidentForAllNamespaces(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ClusterAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNamespacedClusterAlertTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1ClusterAlertList response = api.listNamespacedClusterAlert(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Incident
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNamespacedIncidentTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1IncidentList response = api.listNamespacedIncident(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind NodeAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNamespacedNodeAlertTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1NodeAlertList response = api.listNamespacedNodeAlert(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind PodAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNamespacedPodAlertTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1PodAlertList response = api.listNamespacedPodAlert(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind SearchlightPlugin
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNamespacedSearchlightPluginTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1SearchlightPluginList response = api.listNamespacedSearchlightPlugin(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind NodeAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNodeAlertForAllNamespacesTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1NodeAlertList response = api.listNodeAlertForAllNamespaces(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind PodAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPodAlertForAllNamespacesTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1PodAlertList response = api.listPodAlertForAllNamespaces(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind SearchlightPlugin
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSearchlightPluginForAllNamespacesTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1SearchlightPluginList response = api.listSearchlightPluginForAllNamespaces(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ClusterAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchNamespacedClusterAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        Object body = null;
        String pretty = null;
        V1alpha1ClusterAlert response = api.patchNamespacedClusterAlert(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Incident
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchNamespacedIncidentTest() throws ApiException {
        String name = null;
        String namespace = null;
        Object body = null;
        String pretty = null;
        V1alpha1Incident response = api.patchNamespacedIncident(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified NodeAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchNamespacedNodeAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        Object body = null;
        String pretty = null;
        V1alpha1NodeAlert response = api.patchNamespacedNodeAlert(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified PodAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchNamespacedPodAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        Object body = null;
        String pretty = null;
        V1alpha1PodAlert response = api.patchNamespacedPodAlert(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified SearchlightPlugin
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchNamespacedSearchlightPluginTest() throws ApiException {
        String name = null;
        String namespace = null;
        Object body = null;
        String pretty = null;
        V1alpha1SearchlightPlugin response = api.patchNamespacedSearchlightPlugin(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ClusterAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNamespacedClusterAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        V1alpha1ClusterAlert response = api.readNamespacedClusterAlert(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Incident
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNamespacedIncidentTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        V1alpha1Incident response = api.readNamespacedIncident(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified NodeAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNamespacedNodeAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        V1alpha1NodeAlert response = api.readNamespacedNodeAlert(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified PodAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNamespacedPodAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        V1alpha1PodAlert response = api.readNamespacedPodAlert(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified SearchlightPlugin
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNamespacedSearchlightPluginTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        V1alpha1SearchlightPlugin response = api.readNamespacedSearchlightPlugin(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ClusterAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceNamespacedClusterAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1alpha1ClusterAlert body = null;
        String pretty = null;
        V1alpha1ClusterAlert response = api.replaceNamespacedClusterAlert(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Incident
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceNamespacedIncidentTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1alpha1Incident body = null;
        String pretty = null;
        V1alpha1Incident response = api.replaceNamespacedIncident(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified NodeAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceNamespacedNodeAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1alpha1NodeAlert body = null;
        String pretty = null;
        V1alpha1NodeAlert response = api.replaceNamespacedNodeAlert(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified PodAlert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceNamespacedPodAlertTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1alpha1PodAlert body = null;
        String pretty = null;
        V1alpha1PodAlert response = api.replaceNamespacedPodAlert(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified SearchlightPlugin
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceNamespacedSearchlightPluginTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1alpha1SearchlightPlugin body = null;
        String pretty = null;
        V1alpha1SearchlightPlugin response = api.replaceNamespacedSearchlightPlugin(name, namespace, body, pretty);

        // TODO: test validations
    }
    
}
