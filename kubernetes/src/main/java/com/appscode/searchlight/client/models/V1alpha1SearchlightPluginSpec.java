/*
 * stash-server
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * Contact: hello@appscode.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.appscode.searchlight.client.models;

import java.util.Objects;
import com.appscode.searchlight.client.models.V1alpha1PluginArguments;
import com.appscode.searchlight.client.models.V1alpha1WebhookServiceSpec;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SearchlightPluginSpec describes the SearchlightPlugin the user wishes to create.
 */
@ApiModel(description = "SearchlightPluginSpec describes the SearchlightPlugin the user wishes to create.")

public class V1alpha1SearchlightPluginSpec {
  @SerializedName("alertKinds")
  private List<String> alertKinds = new ArrayList<String>();

  @SerializedName("arguments")
  private V1alpha1PluginArguments arguments = null;

  @SerializedName("command")
  private String command = null;

  @SerializedName("states")
  private List<String> states = new ArrayList<String>();

  @SerializedName("webhook")
  private V1alpha1WebhookServiceSpec webhook = null;

  public V1alpha1SearchlightPluginSpec alertKinds(List<String> alertKinds) {
    this.alertKinds = alertKinds;
    return this;
  }

  public V1alpha1SearchlightPluginSpec addAlertKindsItem(String alertKindsItem) {
    this.alertKinds.add(alertKindsItem);
    return this;
  }

   /**
   * AlertKinds refers to supports Alert kinds for this plugin
   * @return alertKinds
  **/
  @ApiModelProperty(required = true, value = "AlertKinds refers to supports Alert kinds for this plugin")
  public List<String> getAlertKinds() {
    return alertKinds;
  }

  public void setAlertKinds(List<String> alertKinds) {
    this.alertKinds = alertKinds;
  }

  public V1alpha1SearchlightPluginSpec arguments(V1alpha1PluginArguments arguments) {
    this.arguments = arguments;
    return this;
  }

   /**
   * Supported arguments for SearchlightPlugin
   * @return arguments
  **/
  @ApiModelProperty(value = "Supported arguments for SearchlightPlugin")
  public V1alpha1PluginArguments getArguments() {
    return arguments;
  }

  public void setArguments(V1alpha1PluginArguments arguments) {
    this.arguments = arguments;
  }

  public V1alpha1SearchlightPluginSpec command(String command) {
    this.command = command;
    return this;
  }

   /**
   * Check Command
   * @return command
  **/
  @ApiModelProperty(value = "Check Command")
  public String getCommand() {
    return command;
  }

  public void setCommand(String command) {
    this.command = command;
  }

  public V1alpha1SearchlightPluginSpec states(List<String> states) {
    this.states = states;
    return this;
  }

  public V1alpha1SearchlightPluginSpec addStatesItem(String statesItem) {
    this.states.add(statesItem);
    return this;
  }

   /**
   * Supported Icinga Service State
   * @return states
  **/
  @ApiModelProperty(required = true, value = "Supported Icinga Service State")
  public List<String> getStates() {
    return states;
  }

  public void setStates(List<String> states) {
    this.states = states;
  }

  public V1alpha1SearchlightPluginSpec webhook(V1alpha1WebhookServiceSpec webhook) {
    this.webhook = webhook;
    return this;
  }

   /**
   * Webhook provides a reference to the service for this SearchlightPlugin. It must communicate on port 80
   * @return webhook
  **/
  @ApiModelProperty(value = "Webhook provides a reference to the service for this SearchlightPlugin. It must communicate on port 80")
  public V1alpha1WebhookServiceSpec getWebhook() {
    return webhook;
  }

  public void setWebhook(V1alpha1WebhookServiceSpec webhook) {
    this.webhook = webhook;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1SearchlightPluginSpec v1alpha1SearchlightPluginSpec = (V1alpha1SearchlightPluginSpec) o;
    return Objects.equals(this.alertKinds, v1alpha1SearchlightPluginSpec.alertKinds) &&
        Objects.equals(this.arguments, v1alpha1SearchlightPluginSpec.arguments) &&
        Objects.equals(this.command, v1alpha1SearchlightPluginSpec.command) &&
        Objects.equals(this.states, v1alpha1SearchlightPluginSpec.states) &&
        Objects.equals(this.webhook, v1alpha1SearchlightPluginSpec.webhook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertKinds, arguments, command, states, webhook);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1SearchlightPluginSpec {\n");
    
    sb.append("    alertKinds: ").append(toIndentedString(alertKinds)).append("\n");
    sb.append("    arguments: ").append(toIndentedString(arguments)).append("\n");
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

